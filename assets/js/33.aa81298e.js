(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{122:function(t,s,a){"use strict";a.r(s);var n=a(3),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("Swift에서 Where 키워드는 주로 제약을 주기위한 목적으로 사용됩니다.")]),t._v(" "),a("h3",{attrs:{id:"extension에서-사용하기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#extension에서-사용하기"}},[t._v("#")]),t._v(" Extension에서 사용하기")]),t._v(" "),a("p",[t._v("printAll 함수가 문자열 Array에서만 사용할 수 있도록 한정합니다.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('extension Array where Element == String {\n    func printAll() {\n      for str in self {\n          print("Hello, \\(str)!")\n      }\n    }\n}\n\nlet studnets = ["David","John","Ello"]\nstudnets.printAll()\n\n//Hello, David!\n//Hello, John!\n//Hello, Ello!\n\n')])])]),a("p",[t._v("비슷한 다른 방법으로는...")]),t._v(" "),a("h4",[t._v("Comparable를 상속하는 모든타입에서 사용")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("extension Array where Element: Comparable  {\n    // ...\n}\n")])])]),a("h4",[t._v("Comparable, Hashable 두개를 모두 상속하는 타입에서 사용")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("extension Array where Element: Comparable & Hashable {\n    // ...\n}\n")])])]),a("h3",{attrs:{id:"짝수에서만-사용하기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#짝수에서만-사용하기"}},[t._v("#")]),t._v(" 짝수에서만 사용하기")]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" numbers "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" number "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" numbers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" number "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"시퀀스-프로토콜에서-사용하기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#시퀀스-프로토콜에서-사용하기"}},[t._v("#")]),t._v(" 시퀀스 프로토콜에서 사용하기")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('let arr = [0,1,2,3]\nlet result = arr.lazy.map { print("matched!!"); return $0 }.first(where: { $0 == 2 })\nprint(result) \n//matched!!\n//matched!!\n//matched!!\n\n')])])])])}),[],!1,null,null,null);s.default=e.exports}}]);